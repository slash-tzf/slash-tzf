{"titleNameMap":{"educationList":"教育背景","workExpList":"工作经历","projectList":"项目经历","skillList":"个人技能","awardList":"更多信息","workList":"个人作品","aboutme":"自我介绍"},"avatar":{"hidden":false},"profile":{"name":"童志峰","email":"tzf@bupt.edu.cn","mobile":"15988268520","github":"github.com/slash-tzf","zhihu":"","workExpYear":"","workPlace":"","positionTitle":""},"educationList":[{"edu_time":["2024.09.01","至今"],"school":"北京邮电大学","major":"信息与通信工程 (硕士)","dataIndex":1},{"edu_time":["2020.09.01","2024.06.30"],"school":"杭州电子科技大学","major":"通信工程","academic_degree":"本科","dataIndex":0}],"awardList":[{"award_info":"全国大学生电子设计大赛省一等奖","award_time":"2023","dataIndex":1},{"award_info":"全国大学生电子设计大赛省二等奖","award_time":"2022","dataIndex":0},{"award_info":"ADI软件无线电大赛特等奖","award_time":"2023","dataIndex":2},{"award_info":"科研成果：Accurate Retrieval of the Whole Flood Process from Occurrence to Recession Based on GPS Original CNR, Fitted CNR, and Seamless CNR Series（SCI 中科院二区）","award_time":"2023","dataIndex":3}],"workExpList":[],"skillList":[{"skill_name":"技能语言","skill_desc":"熟悉C/C++、matlab，了解python、shell等编程语言；","skill_level":null,"dataIndex":1},{"skill_name":"开发板","skill_level":null,"skill_desc":"熟练掌握STM32、ESP32、TI C2000、ZYNQ PS端开发；","dataIndex":1},{"skill_name":"硬件接口","skill_level":null,"skill_desc":"熟悉SPI、I2C、UART、USB等外设通信协议，熟悉TCP、UDP、HTTP、MQTT等网络协议；","dataIndex":2},{"skill_name":"FreeRTOS","skill_level":null,"skill_desc":"熟悉FreeRTOS实时操作系统，熟悉任务管理、信号量、队列等通信与同步机制；","dataIndex":6},{"skill_name":"Linux","skill_level":null,"skill_desc":"熟悉Linux系统基本操作与指令，熟悉Linux系统下多进程/线程应用编程、网络编程；","dataIndex":3},{"skill_name":"相关技能","skill_level":null,"skill_desc":"熟练使用cmake、git、docker、gdb等相关辅助工具，熟练使用Markdown编写开发文档；","dataIndex":4},{"skill_name":"硬件","skill_level":null,"skill_desc":"熟练使用硬件仪器如：示波器、信号发生器、万用表、频谱仪、矢网，能独立进行软硬件联调；","dataIndex":5}],"projectList":[{"project_name":"信号调制度检测装置","project_role":"全栈","project_time":"2022.08","project_desc":"基于 STM32F407 微控制器与超外差接收机架构，实现 10–30 MHz 范围 AM/FM 信号的自动识别与解调；支持 1–10 kHz 调制频率下的调制方式判别与参数测量。通过精确硬件控制实现无失真解调，基带信号可在示波器直观展示，并通过串口屏进行数据展示与人机交互。","project_content":"\n1. 硬件方案选型与设计：采用高速运放、混频器、DDS 信号源、窄带滤波器构建超外差接收机；利用锁相环实现 FM 信号解调，使用包络检波器实现 AM 解调，高速 ADC 提供采样输入。\n2. MCU外设接口驱动编写：使用 SPI + DMA 控制 DDS 扫频；配置定时器 + DMA 获取并口ADC数据，实现 10 MSps 高速采样；通过 UART 与串口屏通信，实现数据显示及参数调试。\n3. 信号识别与处理算法：设计 滑动窗口算法快速识别调制方式；移植 CMSIS-DSP 库，通过 FFT 提取 AM 信号频谱与调制参数；FM 调制参数由基带信号幅值线性拟合获得，测量精度可达 1%。","dataIndex":0},{"project_name":"同轴电缆长度与终端负载检测装置","project_role":"全栈","project_time":"2023.08","project_desc":"基于STM32F407、Raspberry Pi与外部测量电路，设计并实现 0.2–50 m 同轴电缆测试系统，支持电缆长度精确测量及终端负载类型（R/L/C）与参数识别。STM32 负责高速采样与前端处理，Raspberry Pi 完成信号分析与算法运算。","project_content":"\n1、硬件方案选型与设计：采用高速运放、双混频器、PLL 信号源、低通滤波器构建超外差接收机，设计差分定向电桥获取激励与反射信号，保证测量精度。\n2、MCU外设接口驱动编写：使用 GPIO 控制 PLL 扫频、I2C 获取高精度 ADC 数据、UART 与树莓派通信，实现实时数据采集与传输。\n3、信号处理算法：基于 TDR 时域反射理论，通过 FFT 得到频域幅相响应，计算S11参数，并利用 IFFT 得到时域反射波形，实现 电缆长度测量与负载识别；引入电延迟补偿和频域插值技术，将长度测量精度提升至 0.1%，负载参数精度提升至 1%。","dataIndex":1},{"project_name":"基于物联网的数据可视化平台","project_role":"独立开发","project_time":"2024.11~2025.03","project_desc":"该项目基于MQTT协议分为设备端与服务端，设备端包括ESP32、4G/GNSS模组、温湿度以及光照传感器模块，负责传感器数据采集，通过4G/WiFi上报到服务端，支持OTA以及设备离线配置。服务端包括MQTT Broker、sql数据库、web应用，负责数据落库、用户登陆、鉴权以及web展示。","project_content":"\n1、设备端开发：基于 ESP32-S3 与 4G 模块实现物联网节点，支持 PPP 拨号上网与 Wi-Fi AP 路由管理界面；通过传感器采集环境数据和经纬度。在FreeRTOS 多任务架构下设计 “全局数据模型 + 事件驱动” 通信机制，实现任务间高效资源共享，避免复杂同步开销。利用 ESP-IDF MQTT 客户端 实现自动重连、主题订阅/发布，将数据以 JSON 格式上报；结合 MQTT + HTTPS + 阿里云 CDN 完成远程 OTA，支持 A/B 分区、固件自检回滚、断点续传。\n2、服务端开发：本地服务器基于 Docker Compose 部署 EMQX Broker 与 MySQL，实现用户认证、权限管理与消息存储；编写 Python 脚本监听消息并落库；结合大模型工具完成 Web 前后端开发，实现数据可视化展示。","dataIndex":2},{"project_time":"2025.03~2025.04","project_name":"基于RK3568平台的实时视频处理与推流系统","project_role":"独立开发","project_desc":"项目基于RK3568实现摄像头采集、YOLOv5模型目标检测、本地DRM显示以及H.264硬件编码与 RTMP 推流。采用多线程架构结合 V4L2、RGA、RKNPU、OpenCV 与 FFmpeg，充分利用硬件加速单元，保证低延迟与稳定帧率。","project_content":"\n1、视频采集与缓冲管理：基于 V4L2 完成摄像头驱动初始化、图像格式配置与缓冲区管理，利用循环队列保障帧数据实时性。\n2、多线程并行架构：设计生产者–消费者流水线，实现采集、推理、显示与推流四大线程协同运行，降低系统延迟并提升稳定性。\n3、目标检测与图像处理：调用 RKNN 加载 YOLOv5 模型执行目标检测，结合 RGA 进行图像格式转换，使用 OpenCV 绘制检测结果与 FPS 信息。\n4、硬件加速与推流：基于 FFmpeg (rkmpp) 完成 H.264 硬件编码，并通过 RTMP 协议实时推流；使用 DRM 双缓冲实现本地屏幕高效渲染。\n5、Debug与性能优化：通过 gdb 定位硬件加速单元异常并修改 u-boot DDR 参数修复段错误；利用 Valgrind/kcachegrind 分析性能瓶颈，优化数据预处理与线程逻辑，使 FPS 提升 50%。","dataIndex":3}],"workList":[],"aboutme":{"aboutme_desc":""},"theme":{"color":"#2f5785","tagColor":"#8bc34a"}}